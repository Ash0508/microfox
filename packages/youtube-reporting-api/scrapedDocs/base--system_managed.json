{
  "url": "https://developers.google.com/youtube/reporting/v1/reports/system_managed",
  "content": "Skip to main content\nYouTube\nSign in\nYouTube\nHome\nOverview\nAuthorization\nBulk Reports\nTargeted Queries\nResources\nYouTube Reporting API\nBulk Data Reports for YouTube Analytics\nGet Bulk Data Reports\nDimensions\nMetrics\nChannel Reports\nContent Owner Reports\nSystem-Managed Reports\nOverview\nGet System-Managed Reports\nFields\nFinancial Summaries\nFinancial Reports\nVideos\nAssets\nReferences\nClaims\nPrimetime\nAPI Reference\nOverview\nJobs\nReports\nReportTypes\nRevision History\nWe are updating the YouTube Analytics & Reporting APIs to match how YouTube counts views for Shorts. Learn more\nHome\nProducts\nYouTube\nAnalytics and Reporting APIs\nBulk Reports\nWas this helpful?\nYouTube Reporting API - Get Bulk Data Reports \nbookmark_border\nOn this page\nRetrieving reports\nStep 1: Retrieve authorization credentials\nStep 2: Retrieve the job ID for the desired report\nStep 3: Retrieve the report's download URL\nStep 4: Download the report\nProcessing reports\nBest practices\nReport characteristics\n\nYouTube automatically generates a set of system-managed ad revenue reports for content owners that have access to the corresponding reports in Creator Studio. These reports are designed to provide programmatic access to data that is also available in manually downloadable reports accessible in the Reports menu of the YouTube Creator Studio.\n\nNote: The API provides access to a different set of reports than Creator Studio, though the reports contain similar data. API reports might have different fields and also use different field names than Creator Studio reports.\n\nSince YouTube automatically generates system-managed reports, the process for retrieving these reports is different than for the YouTube Analytics bulk data reports available via the API.\n\nRetrieving reports\n\nThe following steps explain how to retrieve system-managed reports via the API.\n\nStep 1: Retrieve authorization credentials\n\nAll YouTube Reporting API requests must be authorized. The Authorization guide explains how to use the OAuth 2.0 protocol to retrieve authorization tokens.\n\nYouTube Reporting API requests use the following authorization scopes:\n\nScopes\nhttps://www.googleapis.com/auth/yt-analytics.readonly\nView YouTube Analytics reports for your YouTube content. This scope provides access to user activity metrics, like view counts and rating counts.\nhttps://www.googleapis.com/auth/yt-analytics-monetary.readonly\nView YouTube Analytics monetary reports for your YouTube content. This scope provides access to user activity metrics and to estimated revenue and ad performance metrics.\nStep 2: Retrieve the job ID for the desired report\n\nCall the jobs.list method to retrieve a list of system-managed jobs. Set the includeSystemManaged parameter to true.\n\nThe reportTypeId property in each returned Job resource identifies the type of system-managed report associated with that job. Your application needs the id property value from the same resource in the following step.\n\nThe Reports document lists available reports, their report type IDs, and the fields they contain. You can also use the reportTypes.list method to retrieve a list of supported report types.\n\nStep 3: Retrieve the report's download URL\n\nCall the jobs.reports.list method to retrieve a list of reports created for the job. In the request, set the jobId parameter to the job ID of the report that you want to retrieve.\n\nYou can filter the list of reports using any or all of the following parameters:\n\nUse the createdAfter parameter to indicate that the API should only return reports created after a specified time. This parameter can be used to ensure that the API only returns reports that you have not already processed.\n\nUse the startTimeBefore parameter to indicate that the API response should only contain reports if the earliest data in the report is before the specified date. Whereas the createdAfter parameter pertains to the time the report was created, this date pertains to the data in the report.\n\nUse the startTimeAtOrAfter parameter to indicate that the API response should only contain reports if the earliest data in the report is on or after the specified date. Like the startTimeBefore parameter, this parameter value corresponds to the data in the report and not the time the report was created.\n\nThe API response contains a list of Report resources for that job. Each resource refers to a report that contains data for a unique period.\n\nThe resource's startTime and endTime properties identify the time period that the report's data covers.\nThe resource's downloadUrl property identifies the URL from which the report can be fetched.\nThe resource's createTime property specifies the date and time when the report was generated. Your application should store this value and use it to determine whether previously downloaded reports have changed.\nStep 4: Download the report\n\nSend an HTTP GET request to the downloadUrl obtained in step 4 to retrieve the report.\n\nProcessing reports\nBest practices\n\nApplications that use the YouTube Reporting API should always follow these practices:\n\nUse a report's header row to determine the ordering of the report's columns. For example, do not assume that views will be the first metric returned in a report just because it is the first metric listed in a report description. Instead, use the report's header row to determine which column contains that data.\n\nKeep a record of the reports you have downloaded to avoid repeatedly processing the same report. The following list suggests a couple of ways to do that.\n\nWhen calling the reports.list method, use the createdAfter parameter to only retrieve reports created after a certain date. (Omit the createdAfter parameter the first time you retrieve reports.)\n\nEach time you retrieve and successfully process reports, store the timestamp corresponding to the date and time when the newest of those reports was created. Then, update the createdAfter parameter value on each successive call to the reports.list method to ensure that you are only retrieving new reports, including new reports with backfilled data, each time you call the API.\n\nAs a safeguard, before retrieving a report, also check to ensure that the report's ID is not already listed in your database.\n\nStore the ID for each report that you have downloaded and processed. You can also store additional information like the date and time when each report was generated or the report's startTime and endTime, which together identify the period for which the report contains data. For reports that retrieve bulk data for YouTube Analytics, each job will likely have many reports since each report contains data for a 24-hour period. System-managed jobs that cover longer time periods will have fewer reports.\n\nUse the report ID to identify reports that you still need to download and import. However, if two new reports have the same startTime and endTime property values, only import the report with the newer createTime value.\n\nReport characteristics\n\nAPI reports are versioned .csv (comma-separated values) files that have the following characteristics:\n\nEach report contains data for a unique period lasting from 12:00 a.m. Pacific time on the report's start date through 11:59 p.m. Pacific time on the report's end date.\n\nReport data is not sorted.\n\nWas this helpful?\n\nExcept as otherwise noted, the content of this page is licensed under the Creative Commons Attribution 4.0 License, and code samples are licensed under the Apache 2.0 License. For details, see the Google Developers Site Policies. Java is a registered trademark of Oracle and/or its affiliates.\n\nLast updated 2025-04-24 UTC.\n\nBlog\nGitHub\nIssue Tracker\nStack Overflow\nYouTube Researcher Program\nTools\nGoogle APIs Explorer\nYouTube Player Demo\nConfigure a Subscribe Button\nIssue Tracker\nFile a bug\nRequest a feature\nSee open issues\nProduct Info\nTerms of Service\nDeveloper Policies\nRequired Minimum Functionality\nBranding Guidelines\nAndroid\nChrome\nFirebase\nGoogle Cloud Platform\nGoogle AI\nAll products\nTerms\nPrivacy\nSign up for the Google for Developers newsletter\nSubscribe",
  "updatedAt": "2025-05-04T11:06:51.237Z"
}