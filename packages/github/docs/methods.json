{
  "actions": [
    "setAllowedActionsOrganization",
    "setAllowedActionsRepository",
    "setCustomLabelsForSelfHostedRunnerForOrg",
    "setCustomLabelsForSelfHostedRunnerForRepo",
    "setCustomOidcSubClaimForRepo",
    "setGithubActionsDefaultWorkflowPermissionsOrganization",
    "setGithubActionsDefaultWorkflowPermissionsRepository",
    "setGithubActionsPermissionsOrganization",
    "setGithubActionsPermissionsRepository",
    "setSelectedReposForOrgSecret",
    "setSelectedReposForOrgVariable",
    "setSelectedRepositoriesEnabledGithubActionsOrganization",
    "setWorkflowAccessToRepository",
    "updateEnvironmentVariable",
    "updateHostedRunnerForOrg",
    "updateOrgVariable",
    "updateRepoVariable"
  ],
  "activity": [
    "checkRepoIsStarredByAuthenticatedUser",
    "deleteRepoSubscription",
    "deleteThreadSubscription",
    "getFeeds",
    "getRepoSubscription",
    "getThread",
    "getThreadSubscriptionForAuthenticatedUser",
    "listEventsForAuthenticatedUser",
    "listNotificationsForAuthenticatedUser",
    "listOrgEventsForAuthenticatedUser",
    "listPublicEvents",
    "listPublicEventsForRepoNetwork",
    "listPublicEventsForUser",
    "listPublicOrgEvents",
    "listReceivedEventsForUser",
    "listReceivedPublicEventsForUser",
    "listRepoEvents",
    "listRepoNotificationsForAuthenticatedUser",
    "listReposStarredByAuthenticatedUser",
    "listReposStarredByUser",
    "listReposWatchedByUser",
    "listStargazersForRepo",
    "listWatchedReposForAuthenticatedUser",
    "listWatchersForRepo",
    "markNotificationsAsRead",
    "markRepoNotificationsAsRead",
    "markThreadAsDone",
    "markThreadAsRead",
    "setRepoSubscription",
    "setThreadSubscription",
    "starRepoForAuthenticatedUser",
    "unstarRepoForAuthenticatedUser"
  ],
  "apps": [
    "addRepoToInstallation",
    "addRepoToInstallationForAuthenticatedUser",
    "checkToken",
    "createFromManifest",
    "createInstallationAccessToken",
    "deleteAuthorization",
    "deleteInstallation",
    "deleteToken",
    "getAuthenticated",
    "getBySlug",
    "getInstallation",
    "getOrgInstallation",
    "getRepoInstallation",
    "getSubscriptionPlanForAccount",
    "getSubscriptionPlanForAccountStubbed",
    "getUserInstallation",
    "getWebhookConfigForApp",
    "getWebhookDelivery",
    "listAccountsForPlan",
    "listAccountsForPlanStubbed",
    "listInstallationReposForAuthenticatedUser",
    "listInstallationRequestsForAuthenticatedApp",
    "listInstallations",
    "listInstallationsForAuthenticatedUser",
    "listPlans",
    "listPlansStubbed",
    "listReposAccessibleToInstallation",
    "listSubscriptionsForAuthenticatedUser",
    "listSubscriptionsForAuthenticatedUserStubbed",
    "listWebhookDeliveries",
    "redeliverWebhookDelivery",
    "removeRepoFromInstallation",
    "removeRepoFromInstallationForAuthenticatedUser",
    "resetToken",
    "revokeInstallationAccessToken",
    "scopeToken",
    "suspendInstallation",
    "unsuspendInstallation",
    "updateWebhookConfigForApp"
  ],
  "billing": [
    "getGithubActionsBillingOrg",
    "getGithubActionsBillingUser",
    "getGithubBillingUsageReportOrg",
    "getGithubPackagesBillingOrg",
    "getGithubPackagesBillingUser",
    "getSharedStorageBillingOrg",
    "getSharedStorageBillingUser"
  ],
  "checks": [
    "create",
    "createSuite",
    "get",
    "getSuite",
    "listAnnotations",
    "listForRef",
    "listForSuite",
    "listSuitesForRef",
    "rerequestRun",
    "rerequestSuite",
    "setSuitesPreferences",
    "update"
  ],
  "codeScanning": [
    "commitAutofix",
    "createAutofix",
    "createVariantAnalysis",
    "deleteAnalysis",
    "deleteCodeqlDatabase",
    "getAlert",
    "getAnalysis",
    "getAutofix",
    "getCodeqlDatabase",
    "getDefaultSetup",
    "getSarif",
    "getVariantAnalysis",
    "getVariantAnalysisRepoTask",
    "listAlertInstances",
    "listAlertsForOrg",
    "listAlertsForRepo",
    "listAlertsInstances",
    "listCodeqlDatabases",
    "listRecentAnalyses",
    "updateAlert",
    "updateDefaultSetup",
    "uploadSarif"
  ],
  "codeSecurity": [
    "attachConfiguration",
    "attachEnterpriseConfiguration",
    "createConfiguration",
    "createConfigurationForEnterprise",
    "deleteConfiguration",
    "deleteConfigurationForEnterprise",
    "detachConfiguration",
    "getConfiguration",
    "getConfigurationForRepository",
    "getConfigurationsForEnterprise",
    "getConfigurationsForOrg",
    "getDefaultConfigurations",
    "getDefaultConfigurationsForEnterprise",
    "getRepositoriesForConfiguration",
    "getRepositoriesForEnterpriseConfiguration",
    "getSingleConfigurationForEnterprise",
    "setConfigurationAsDefault",
    "setConfigurationAsDefaultForEnterprise",
    "updateConfiguration",
    "updateEnterpriseConfiguration"
  ],
  "codesOfConduct": ["getAllCodesOfConduct", "getConductCode"],
  "codespaces": [
    "addRepositoryForSecretForAuthenticatedUser",
    "addSelectedRepoToOrgSecret",
    "checkPermissionsForDevcontainer",
    "codespaceMachinesForAuthenticatedUser",
    "createForAuthenticatedUser",
    "createOrUpdateOrgSecret",
    "createOrUpdateRepoSecret",
    "createOrUpdateSecretForAuthenticatedUser",
    "createWithPrForAuthenticatedUser",
    "createWithRepoForAuthenticatedUser",
    "deleteForAuthenticatedUser",
    "deleteFromOrganization",
    "deleteOrgSecret",
    "deleteRepoSecret",
    "deleteSecretForAuthenticatedUser",
    "exportForAuthenticatedUser",
    "getCodespacesForUserInOrg",
    "getExportDetailsForAuthenticatedUser",
    "getForAuthenticatedUser",
    "getOrgPublicKey",
    "getOrgSecret",
    "getPublicKeyForAuthenticatedUser",
    "getRepoPublicKey",
    "getRepoSecret",
    "getSecretForAuthenticatedUser",
    "listDevcontainersInRepositoryForAuthenticatedUser",
    "listForAuthenticatedUser",
    "listInOrganization",
    "listInRepositoryForAuthenticatedUser",
    "listOrgSecrets",
    "listRepoSecrets",
    "listRepositoriesForSecretForAuthenticatedUser",
    "listSecretsForAuthenticatedUser",
    "listSelectedReposForOrgSecret",
    "preFlightWithRepoForAuthenticatedUser",
    "publishForAuthenticatedUser",
    "removeRepositoryForSecretForAuthenticatedUser",
    "removeSelectedRepoFromOrgSecret",
    "repoMachinesForAuthenticatedUser",
    "setRepositoriesForSecretForAuthenticatedUser",
    "setSelectedReposForOrgSecret",
    "startForAuthenticatedUser",
    "stopForAuthenticatedUser",
    "stopInOrganization",
    "updateForAuthenticatedUser"
  ],
  "copilot": [
    "addCopilotForBusinessSeats",
    "cancelCopilotSeatAssignmentForTeams",
    "getCopilotOrganizationDetails",
    "getCopilotSeatAssignmentForTeams",
    "getCopilotSeatAssignmentForUser",
    "listCopilotSeats",
    "removeCopilotForBusinessSeats"
  ],
  "dependabot": [
    "addSelectedRepoToOrgSecret",
    "createOrUpdateOrgSecret",
    "createOrUpdateRepoSecret",
    "deleteOrgSecret",
    "deleteRepoSecret",
    "getAlert",
    "getOrgPublicKey",
    "getOrgSecret",
    "getRepoPublicKey",
    "getRepoSecret",
    "listAlertsForOrg",
    "listAlertsForRepo",
    "listOrgSecrets",
    "listRepoSecrets",
    "listSelectedReposForOrgSecret",
    "removeSelectedRepoFromOrgSecret",
    "setSelectedReposForOrgSecret",
    "updateAlert"
  ],
  "dependencyGraph": ["createRepositorySnapshot", "diffRange", "exportSbom"],
  "emojis": ["get"],
  "gists": [
    "checkIsStarred",
    "create",
    "createComment",
    "delete",
    "deleteComment",
    "fork",
    "get",
    "getComment",
    "getRevision",
    "list",
    "listComments",
    "listCommits",
    "listForUser",
    "listForks",
    "listPublic",
    "listStarred",
    "star",
    "unstar",
    "update",
    "updateComment"
  ],
  "git": [
    "createBlob",
    "createCommit",
    "createRef",
    "createTag",
    "createTree",
    "deleteRef",
    "getBlob",
    "getCommit",
    "getRef",
    "getTag",
    "getTree",
    "listMatchingRefs",
    "updateRef"
  ],
  "gitignore": ["getAllTemplates", "getTemplate"],
  "hostedCompute": [
    "createHostedComputeOrganizationSecret",
    "createHostedComputeRepositorySecret",
    "deleteHostedComputeOrganizationSecret",
    "deleteHostedComputeRepositorySecret",
    "getHostedComputeOrganizationPublicKey",
    "getHostedComputeOrganizationSecret",
    "getHostedComputeRepositoryPublicKey",
    "getHostedComputeRepositorySecret",
    "listHostedComputeOrganizationSecrets",
    "listHostedComputeRepositorySecrets",
    "listSelectedReposForHostedComputeOrganizationSecret",
    "removeSelectedRepoFromHostedComputeOrganizationSecret",
    "setSelectedReposForHostedComputeOrganizationSecret"
  ],
  "interactions": [
    "getRestrictionsForAuthenticatedUser",
    "getRestrictionsForOrg",
    "getRestrictionsForRepo",
    "getRestrictionsForYourPublicRepos",
    "removeRestrictionsForAuthenticatedUser",
    "removeRestrictionsForOrg",
    "removeRestrictionsForRepo",
    "removeRestrictionsForYourPublicRepos",
    "setRestrictionsForAuthenticatedUser",
    "setRestrictionsForOrg",
    "setRestrictionsForRepo",
    "setRestrictionsForYourPublicRepos"
  ],
  "issues": [
    "addAssignees",
    "addLabels",
    "checkUserCanBeAssigned",
    "create",
    "createComment",
    "createLabel",
    "createMilestone",
    "deleteComment",
    "deleteLabel",
    "deleteMilestone",
    "get",
    "getComment",
    "getEvent",
    "getLabel",
    "getMilestone",
    "list",
    "listAssignees",
    "listComments",
    "listCommentsForRepo",
    "listEvents",
    "listEventsForRepo",
    "listEventsForTimeline",
    "listForAuthenticatedUser",
    "listForOrg",
    "listForRepo",
    "listLabelsForMilestone",
    "listLabelsForRepo",
    "listLabelsOnIssue",
    "listMilestones",
    "lock",
    "removeAllLabels",
    "removeAssignees",
    "removeLabel",
    "setLabels",
    "unlock",
    "update",
    "updateComment",
    "updateLabel",
    "updateMilestone"
  ],
  "licenses": ["get", "getAllCommonlyUsed"],
  "markdown": ["render"],
  "meta": ["get", "getOctocat", "getZen", "root"],
  "migrations": [
    "cancelImport",
    "deleteArchiveForAuthenticatedUser",
    "deleteArchiveForOrg",
    "downloadArchiveForOrg",
    "getArchiveForAuthenticatedUser",
    "getCommitAuthors",
    "getImportStatus",
    "getLargeFiles",
    "getStatusForAuthenticatedUser",
    "getStatusForOrg",
    "listForAuthenticatedUser",
    "listForOrg",
    "listReposForAuthenticatedUser",
    "listReposForOrg",
    "mapCommitAuthor",
    "setLfsPreference",
    "startForAuthenticatedUser",
    "startForOrg",
    "startImport",
    "unlockRepoForAuthenticatedUser",
    "unlockRepoForOrg",
    "updateImport"
  ],
  "oidc": ["getOidcCustomSubTemplateForOrg"],
  "orgs": [
    "blockUser",
    "cancelInvitation",
    "checkBlockedUser",
    "checkMembershipForUser",
    "checkPublicMembershipForUser",
    "convertMemberToOutsideCollaborator",
    "createInvitation",
    "createWebhook",
    "deleteWebhook",
    "get",
    "getMembershipForAuthenticatedUser",
    "getMembershipForUser",
    "getWebhook",
    "getWebhookConfigForOrg",
    "getWebhookDelivery",
    "list",
    "listAppInstallations",
    "listBlockedUsers",
    "listCustomRoles",
    "listFailedInvitations",
    "listForAuthenticatedUser",
    "listForUser",
    "listInvitationTeams",
    "listMembers",
    "listMembershipsForAuthenticatedUser",
    "listOutsideCollaborators",
    "listPendingInvitations",
    "listPublicMembers",
    "listWebhookDeliveries",
    "listWebhooks",
    "pingWebhook",
    "redeliverWebhookDelivery",
    "removeMember",
    "removeMembershipForUser",
    "removeOutsideCollaborator",
    "removePublicMembershipForAuthenticatedUser",
    "setMembershipForUser",
    "setPublicMembershipForAuthenticatedUser",
    "unblockUser",
    "update",
    "updateMembershipForAuthenticatedUser",
    "updateWebhook",
    "updateWebhookConfigForOrg"
  ],
  "packages": [
    "deletePackageForAuthenticatedUser",
    "deletePackageForOrg",
    "deletePackageForUser",
    "deletePackageVersionForAuthenticatedUser",
    "deletePackageVersionForOrg",
    "deletePackageVersionForUser",
    "getAllPackageVersionsForAPackageOwnedByAnOrg",
    "getAllPackageVersionsForAPackageOwnedByTheAuthenticatedUser",
    "getAllPackageVersionsForPackageOwnedByAuthenticatedUser",
    "getAllPackageVersionsForPackageOwnedByOrg",
    "getAllPackageVersionsForPackageOwnedByUser",
    "getPackageForAuthenticatedUser",
    "getPackageForOrganization",
    "getPackageForUser",
    "getPackageVersionForAuthenticatedUser",
    "getPackageVersionForOrganization",
    "getPackageVersionForUser",
    "listPackagesForAuthenticatedUser",
    "listPackagesForOrganization",
    "listPackagesForUser",
    "restorePackageForAuthenticatedUser",
    "restorePackageForOrg",
    "restorePackageForUser",
    "restorePackageVersionForAuthenticatedUser",
    "restorePackageVersionForOrg",
    "restorePackageVersionForUser"
  ],
  "projects": [
    "addCollaborator",
    "createCard",
    "createColumn",
    "createForAuthenticatedUser",
    "createForOrg",
    "createForRepo",
    "delete",
    "deleteCard",
    "deleteColumn",
    "get",
    "getCard",
    "getColumn",
    "getPermissionForUser",
    "listCards",
    "listCollaborators",
    "listColumns",
    "listForOrg",
    "listForRepo",
    "listForUser",
    "moveCard",
    "moveColumn",
    "removeCollaborator",
    "update",
    "updateCard",
    "updateColumn"
  ],
  "pulls": [
    "checkIfMerged",
    "create",
    "createReplyForReviewComment",
    "createReview",
    "createReviewComment",
    "deletePendingReview",
    "deleteReviewComment",
    "dismissReview",
    "get",
    "getReview",
    "getReviewComment",
    "list",
    "listCommentsForReview",
    "listCommits",
    "listFiles",
    "listRequestedReviewers",
    "listReviewComments",
    "listReviewCommentsForRepo",
    "listReviews",
    "merge",
    "removeRequestedReviewers",
    "requestReviewers",
    "submitReview",
    "update",
    "updateBranch",
    "updateReview",
    "updateReviewComment"
  ],
  "rateLimit": ["get"],
  "reactions": [
    "createForCommitComment",
    "createForIssue",
    "createForIssueComment",
    "createForPullRequestReviewComment",
    "createForRelease",
    "createForTeamDiscussion",
    "createForTeamDiscussionComment",
    "deleteForCommitComment",
    "deleteForIssue",
    "deleteForIssueComment",
    "deleteForPullRequestComment",
    "deleteForRelease",
    "deleteForTeamDiscussion",
    "deleteForTeamDiscussionComment",
    "listForCommitComment",
    "listForIssue",
    "listForIssueComment",
    "listForPullRequestReviewComment",
    "listForRelease",
    "listForTeamDiscussion",
    "listForTeamDiscussionComment"
  ],
  "repos": [
    "acceptInvitation",
    "addAppAccessRestrictions",
    "addCollaborator",
    "addStatusCheckContexts",
    "addTeamAccessRestrictions",
    "addUserAccessRestrictions",
    "checkAutomatedSecurityFixes",
    "checkCollaborator",
    "checkVulnerabilityAlerts",
    "codeownersErrors",
    "compareCommits",
    "compareCommitsWithBasehead",
    "createAutolink",
    "createCommitComment",
    "createCommitSignatureProtection",
    "createCommitStatus",
    "createDeployKey",
    "createDeployment",
    "createDeploymentBranchPolicy",
    "createDeploymentProtectionRule",
    "createDeploymentStatus",
    "createDispatchEvent",
    "createForAuthenticatedUser",
    "createFork",
    "createInOrg",
    "createOrUpdateEnvironment",
    "createOrUpdateFileContents",
    "createPagesDeployment",
    "createPagesSite",
    "createRelease",
    "createTagProtection",
    "createUsingTemplate",
    "createWebhook",
    "declineInvitation",
    "delete",
    "deleteAccessRestrictions",
    "deleteAdminBranchProtection",
    "deleteAnEnvironment",
    "deleteAutolink",
    "deleteBranchProtection",
    "deleteCommitComment",
    "deleteCommitSignatureProtection",
    "deleteDeployKey",
    "deleteDeployment",
    "deleteDeploymentBranchPolicy",
    "deleteFile",
    "deleteInvitation",
    "deletePagesSite",
    "deletePullRequestReviewProtection",
    "deleteRelease",
    "deleteReleaseAsset",
    "deleteTagProtection",
    "deleteWebhook",
    "disableAutomatedSecurityFixes",
    "disableDeploymentProtectionRule",
    "disablePrivateVulnerabilityReporting",
    "disableVulnerabilityAlerts",
    "downloadArchive",
    "downloadTarballArchive",
    "downloadZipballArchive",
    "enableAutomatedSecurityFixes",
    "enablePrivateVulnerabilityReporting",
    "enableVulnerabilityAlerts",
    "generateReleaseNotes",
    "get",
    "getAccessRestrictions",
    "getAdminBranchProtection",
    "getAllEnvironments",
    "getAllStatusCheckContexts",
    "getAllTopics",
    "getAppsWithAccessToProtectedBranch",
    "getAutolink",
    "getBranch",
    "getBranchProtection",
    "getBranchRules",
    "getClones",
    "getCodeFrequencyStats",
    "getCollaboratorPermissionLevel",
    "getCombinedStatusForRef",
    "getCommit",
    "getCommitActivityStats",
    "getCommitComment",
    "getCommitSignatureProtection",
    "getCommunityProfileMetrics",
    "getContent",
    "getContributorsStats",
    "getCustomDeploymentProtectionRule",
    "getDeployKey",
    "getDeployment",
    "getDeploymentBranchPolicy",
    "getDeploymentStatus",
    "getEnvironment",
    "getLatestPagesBuild",
    "getLatestRelease",
    "getPages",
    "getPagesBuild",
    "getPagesHealthCheck",
    "getParticipationStats",
    "getPullRequestReviewProtection",
    "getPunchCardStats",
    "getReadme",
    "getReadmeInDirectory",
    "getRelease",
    "getReleaseAsset",
    "getReleaseByTag",
    "getStatusChecksProtection",
    "getTeamsWithAccessToProtectedBranch",
    "getTopPaths",
    "getTopReferrers",
    "getUsersWithAccessToProtectedBranch",
    "getViews",
    "getWebhook",
    "getWebhookConfigForRepo",
    "getWebhookDelivery",
    "list",
    "listAutolinks",
    "listBranches",
    "listBranchesForHeadCommit",
    "listCollaborators",
    "listCommentsForCommit",
    "listCommitCommentsForRepo",
    "listCommitStatusesForRef",
    "listCommits",
    "listContributors",
    "listCustomDeploymentRuleIntegrations",
    "listDeployKeys",
    "listDeploymentBranchPolicies",
    "listDeploymentStatuses",
    "listDeployments",
    "listForAuthenticatedUser",
    "listForOrg",
    "listForUser",
    "listForks",
    "listInvitations",
    "listInvitationsForAuthenticatedUser",
    "listLanguages",
    "listPagesBuilds",
    "listPublic",
    "listPullRequestsAssociatedWithCommit",
    "listReleaseAssets",
    "listReleases",
    "listTagProtection",
    "listTags",
    "listTeams",
    "listWebhookDeliveries",
    "listWebhooks",
    "merge",
    "mergeUpstream",
    "pingWebhook",
    "redeliverWebhookDelivery",
    "removeAppAccessRestrictions",
    "removeCollaborator",
    "removeStatusCheckContexts",
    "removeStatusCheckProtection",
    "removeTeamAccessRestrictions",
    "removeUserAccessRestrictions",
    "renameBranch",
    "replaceAllTopics",
    "requestPagesBuild",
    "setAdminBranchProtection",
    "setAppAccessRestrictions",
    "setStatusCheckContexts",
    "setTeamAccessRestrictions",
    "setUserAccessRestrictions",
    "testPushWebhook",
    "transfer",
    "update",
    "updateBranchProtection",
    "updateCommitComment",
    "updateDeploymentBranchPolicy",
    "updateInformationAboutPagesSite",
    "updateProtectedBranchPullRequestReviewEnforcement",
    "updateRelease",
    "updateReleaseAsset",
    "updateStatusCheckProtection",
    "updateWebhook",
    "updateWebhookConfigForRepo",
    "uploadReleaseAsset"
  ]
}
