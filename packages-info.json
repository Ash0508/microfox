[
  {
    "name": "@slack/web-api",
    "title": "@slack/web-api",
    "description": "Official library for using the Slack Platform's Web API",
    "path": "packages/@ext_@slack#web-api",
    "dependencies": [
      "@slack/logger",
      "@slack/types",
      "@types/node",
      "@types/retry",
      "axios",
      "eventemitter3",
      "form-data",
      "is-electron",
      "is-stream",
      "p-queue",
      "p-retry",
      "retry"
    ],
    "status": "semiStable",
    "authEndpoint": "",
    "documentation": "https://www.npmjs.com/package/@slack/web-api",
    "icon": "https://raw.githubusercontent.com/microfox-ai/microfox/refs/heads/main/logos/slack-icon.svg",
    "readme_map": {
      "path": "/README.md",
      "title": "@slack/web-api",
      "functionalities": [],
      "description": "The full README for the package"
    },
    "constructors": [
      {
        "name": "WebClient",
        "description": "Create a new Slack Web Client through which you can operate bots on Slack",
        "auth": "apiKey",
        "requiredKeys": [
          {
            "key": "SLACK_TOKEN",
            "displayName": "Slack Token",
            "description": "The token for the Slack Web Client"
          }
        ],
        "internalKeys": []
      }
    ],
    "keysInfo": [
      {
        "key": "SLACK_TOKEN",
        "constructors": [
          "WebClient"
        ],
        "description": "The token for the Slack Web Client",
        "required": true
      }
    ],
    "extraInfo": [
      "Use the `WebClient` constructor to create a new Slack Web Client."
    ]
  },
  {
    "name": "@microfox/ai-sdk",
    "title": "Microfox AI SDK",
    "description": "Microfox adapter for the Vercel AI SDK",
    "path": "packages/ai-sdk",
    "dependencies": [
      "@microfox/core",
      "zod",
      "ai"
    ],
    "status": "partial",
    "apiKeys": [
      "OPENAI_API_KEY"
    ],
    "extraInfo": []
  },
  {
    "name": "@microfox/apollo",
    "title": "Microfox Apollo",
    "description": "Microfox SDK for Apollo.io",
    "path": "packages/apollo",
    "dependencies": [
      "@microfox/core",
      "ky",
      "p-throttle",
      "zod"
    ],
    "status": "partial",
    "apiKeys": [
      "APOLLO_API_KEY"
    ],
    "extraInfo": []
  },
  {
    "name": "@microfox/aws-ses",
    "title": "Microfox AWS SES",
    "description": "A lightweight, type-safe SDK for interacting with AWS Simple Email Service (SES)",
    "path": "packages/aws-ses",
    "dependencies": [
      "@microfox/rest-sdk",
      "zod"
    ],
    "status": "stable",
    "authEndpoint": "/connect/aws",
    "documentation": "https://www.npmjs.com/package/@microfox/aws-ses",
    "icon": "https://raw.githubusercontent.com/microfox-ai/microfox/refs/heads/main/logos/aws-ses.svg",
    "readme_map": {
      "path": "/README.md",
      "title": "createSESClient Microfox",
      "functionalities": [
        "sendEmail",
        "sendBulkEmails"
      ],
      "description": "The full README for the AWS SES SDK"
    },
    "constructors": [
      {
        "name": "createSESClient",
        "description": "Create a new AWS SES client through which you can send emails",
        "auth": "apiKey",
        "requiredKeys": [
          {
            "key": "AWS_SES_ACCESS_KEY_ID",
            "displayName": "Access Key ID",
            "description": "The access key ID for the AWS SES client"
          },
          {
            "key": "AWS_SES_SECRET_ACCESS_KEY",
            "displayName": "Secret Access Key",
            "description": "The secret access key for the AWS SES client"
          },
          {
            "key": "AWS_SES_REGION",
            "displayName": "Region",
            "description": "The region for the AWS SES client"
          }
        ],
        "internalKeys": []
      }
    ],
    "keysInfo": [
      {
        "key": "AWS_SES_ACCESS_KEY_ID",
        "constructors": [
          "createSESClient"
        ],
        "description": "The access key ID for the AWS SES client",
        "required": true
      },
      {
        "key": "AWS_SES_SECRET_ACCESS_KEY",
        "constructors": [
          "createSESClient"
        ],
        "description": "The secret access key for the AWS SES client",
        "required": true
      },
      {
        "key": "AWS_SES_REGION",
        "constructors": [
          "createSESClient"
        ],
        "description": "The region for the AWS SES client",
        "required": true
      }
    ],
    "extraInfo": [
      "Use the `createSESClient` constructor to create a new AWS SES client.",
      "All email addresses must be verified in AWS SES before sending."
    ]
  },
  {
    "name": "@microfox/bing",
    "title": "Microfox Bing",
    "description": "Microfox SDK for Bing search",
    "path": "packages/bing",
    "dependencies": [
      "@microfox/core",
      "ky",
      "zod"
    ],
    "status": "partial",
    "apiKeys": [
      "BING_API_KEY"
    ],
    "extraInfo": []
  },
  {
    "name": "@microfox/calculator",
    "title": "Microfox Calculator",
    "description": "Microfox calculator tool wrapping mathjs",
    "path": "packages/calculator",
    "dependencies": [
      "@microfox/core",
      "mathjs",
      "zod"
    ],
    "status": "partial",
    "apiKeys": [
      "MATHJS_API_KEY"
    ],
    "extraInfo": []
  },
  {
    "name": "@microfox/clearbit",
    "title": "Microfox Clearbit",
    "description": "Microfox SDK for Clearbit",
    "path": "packages/clearbit",
    "dependencies": [
      "@microfox/core",
      "ky",
      "p-throttle",
      "zod"
    ],
    "status": "partial",
    "apiKeys": [
      "CLEARBIT_API_KEY"
    ],
    "extraInfo": []
  },
  {
    "name": "@microfox/core",
    "title": "Microfox Core",
    "description": "Microfox AI utils which work with any LLM and TypeScript AI SDK",
    "path": "packages/core",
    "dependencies": [
      "dedent",
      "delay",
      "jsonrepair",
      "ky",
      "openai-zod-to-json-schema",
      "p-throttle",
      "type-fest",
      "zod",
      "zod-validation-error"
    ],
    "status": "partial",
    "apiKeys": [
      "OPENAI_API_KEY"
    ],
    "extraInfo": []
  },
  {
    "name": "@microfox/dexa",
    "title": "Microfox Dexa",
    "description": "Microfox SDK for Dexa's API (access to trusted podcast knowledge)",
    "path": "packages/dexa",
    "dependencies": [
      "@microfox/core"
    ],
    "status": "partial",
    "apiKeys": [
      "DEXA_API_KEY"
    ],
    "extraInfo": []
  },
  {
    "name": "@microfox/dexter",
    "title": "Microfox Dexter",
    "description": "Microfox adapter for the Dexter AI SDK by Dexa",
    "path": "packages/dexter",
    "dependencies": [
      "@microfox/core",
      "@dexaai/dexter"
    ],
    "status": "partial",
    "apiKeys": [
      "DEXTER_API_KEY"
    ],
    "extraInfo": []
  },
  {
    "name": "@microfox/diffbot",
    "title": "Microfox Diffbot",
    "description": "Microfox SDK for Diffbot",
    "path": "packages/diffbot",
    "dependencies": [
      "@microfox/core",
      "ky",
      "p-throttle",
      "zod"
    ],
    "status": "partial",
    "apiKeys": [
      "DIFFBOT_API_KEY"
    ],
    "extraInfo": []
  },
  {
    "name": "@microfox/discord",
    "title": "Microfox Discord SDK",
    "description": "A lightweight, type-safe SDK for interacting with the Discord API v10",
    "path": "packages/discord",
    "dependencies": [
      "@microfox/rest-sdk",
      "zod"
    ],
    "status": "stable",
    "authEndpoint": "/connect/discord",
    "documentation": "https://www.npmjs.com/package/@microfox/discord",
    "icon": "https://raw.githubusercontent.com/microfox-ai/microfox/refs/heads/main/logos/discord-icon.svg",
    "readme_map": {
      "path": "/README.md",
      "title": "createDiscordSdk Microfox",
      "functionalities": [
        "sendMessage",
        "editMessage",
        "deleteMessage",
        "fetchMessages",
        "reactToMessage",
        "createThread",
        "fetchGuildInfo",
        "fetchUserInfo",
        "registerSlashCommand",
        "registerGlobalSlashCommand",
        "deleteSlashCommand",
        "deleteGlobalSlashCommand",
        "moderateUser",
        "createChannel",
        "updateChannel",
        "deleteChannel",
        "createRole",
        "updateRole",
        "deleteRole",
        "addRoleToUser",
        "removeRoleFromUser",
        "fetchChannels",
        "fetchRoles",
        "fetchSlashCommands",
        "fetchGlobalSlashCommands",
        "registerCommand",
        "registerGlobalCommand",
        "handleInteraction",
        "respondToInteraction",
        "deferInteraction",
        "followUpInteraction"
      ],
      "description": "The full README for the Discord SDK"
    },
    "constructors": [
      {
        "name": "createDiscordSdk",
        "description": "Create a new Discord SDK client through which you can interact with Discord API",
        "auth": "apiKey",
        "requiredKeys": [
          {
            "key": "DISCORD_TOKEN",
            "displayName": "Discord Token",
            "description": "The bot token for the Discord client"
          }
        ],
        "internalKeys": []
      }
    ],
    "keysInfo": [
      {
        "key": "DISCORD_TOKEN",
        "constructors": [
          "createDiscordSdk"
        ],
        "description": "The bot token for the Discord client",
        "required": true
      }
    ],
    "extraInfo": [
      "Use the `createDiscordSdk` constructor to create a new Discord client.",
      "The SDK supports Discord API v10 with comprehensive type safety.",
      "Supports both guild-specific and global slash commands.",
      "Includes full moderation, channel, and role management capabilities."
    ]
  },
  {
    "name": "@microfox/drive",
    "title": "Microfox Drive SDK",
    "description": "Google Drive SDK for Microfox",
    "path": "packages/drive",
    "dependencies": [
      "@microfox/google",
      "@microfox/rest-sdk",
      "zod"
    ],
    "status": "stable",
    "authEndpoint": "/connect/google",
    "documentation": "https://www.npmjs.com/package/@microfox/drive",
    "icon": "https://raw.githubusercontent.com/microfox-ai/microfox/refs/heads/main/logos/drive-icon.svg",
    "constructors": [
      {
        "name": "createDriveSDKWithTokens",
        "description": "Create a new Drive client",
        "zodSecretSchema": "DriveSDKOptionsSchema",
        "auth": "oauth2",
        "requiredKeys": [],
        "internalKeys": [
          {
            "key": "SCOPES",
            "displayName": "Scopes",
            "description": "The scopes for the Google Drive client"
          },
          {
            "key": "GOOGLE_ACCESS_TOKEN",
            "displayName": "Access Token",
            "description": "The access token for the Google Drive client"
          },
          {
            "key": "GOOGLE_REFRESH_TOKEN",
            "displayName": "Refresh Token",
            "description": "The refresh token for the Google Drive client"
          },
          {
            "key": "GOOGLE_CLIENT_ID",
            "displayName": "Client ID",
            "description": "The client ID for the Google Drive client"
          },
          {
            "key": "GOOGLE_CLIENT_SECRET",
            "displayName": "Client Secret",
            "description": "The client secret for the Google Drive client"
          }
        ]
      }
    ],
    "keysInfo": [
      {
        "key": "GOOGLE_ACCESS_TOKEN",
        "constructors": [
          "createDriveSDKWithTokens"
        ],
        "description": "The access token for the Google Drive client",
        "required": true
      },
      {
        "key": "GOOGLE_REFRESH_TOKEN",
        "constructors": [
          "createDriveSDKWithTokens"
        ],
        "description": "The refresh token for the Google Drive client",
        "required": true
      },
      {
        "key": "GOOGLE_CLIENT_ID",
        "constructors": [
          "createDriveSDKWithTokens"
        ],
        "description": "The client ID for the Google Drive client",
        "required": true
      },
      {
        "key": "GOOGLE_CLIENT_SECRET",
        "constructors": [
          "createDriveSDKWithTokens"
        ],
        "description": "The client secret for the Google Drive client",
        "required": true
      },
      {
        "key": "SCOPES",
        "constructors": [
          "createDriveSDKWithTokens"
        ],
        "description": "The scopes for the Google Drive client",
        "required": true
      }
    ],
    "extraInfo": [
      "Use the `createDriveSDKWithTokens` constructor to create a new Drive client."
    ]
  },
  {
    "name": "@microfox/e2b",
    "title": "Microfox E2B",
    "description": "Microfox SDK for E2B's hosted code interpreter",
    "path": "packages/e2b",
    "dependencies": [
      "@microfox/core",
      "@e2b/code-interpreter"
    ],
    "status": "partial",
    "apiKeys": [
      "E2B_API_KEY"
    ],
    "extraInfo": []
  },
  {
    "name": "@microfox/exa",
    "title": "Microfox Exa",
    "description": "Microfox SDK for the Exa search engine",
    "path": "packages/exa",
    "dependencies": [
      "@microfox/core",
      "ky",
      "zod"
    ],
    "status": "partial",
    "apiKeys": [
      "EXA_API_KEY"
    ],
    "extraInfo": []
  },
  {
    "name": "@microfox/firecrawl",
    "title": "Microfox Firecrawl",
    "description": "Microfox SDK for Firecrawl web scraping and crawling",
    "path": "packages/firecrawl",
    "dependencies": [
      "@microfox/core"
    ],
    "status": "partial",
    "apiKeys": [
      "FIRECRAWL_API_KEY"
    ],
    "extraInfo": []
  },
  {
    "name": "@microfox/genkit",
    "title": "Microfox Genkit",
    "description": "Microfox adapter for the Firebase Genkit AI SDK",
    "path": "packages/genkit",
    "dependencies": [
      "@microfox/core",
      "zod",
      "genkit"
    ],
    "status": "partial",
    "apiKeys": [
      "GENKIT_API_KEY"
    ],
    "extraInfo": []
  },
  {
    "name": "@microfox/github",
    "title": "Microfox GitHub",
    "description": "Microfox SDK for GitHub",
    "path": "packages/github",
    "dependencies": [
      "@microfox/core",
      "ky",
      "octokit",
      "p-throttle",
      "zod"
    ],
    "status": "stable",
    "authEndpoint": "/connect/github",
    "documentation": "https://www.npmjs.com/package/@microfox/github",
    "icon": "https://raw.githubusercontent.com/microfox-ai/microfox/refs/heads/main/logos/github-icon.svg",
    "readme_map": {
      "path": "https://raw.githubusercontent.com/octokit/plugin-rest-endpoint-methods.js/refs/heads/main/docs/${scope}/${method}.md",
      "title": "GitHub SDK for Microfox",
      "functionalities": [
        "restApi"
      ],
      "dynamic_setters": [
        {
          "key": "scope",
          "list": "/docs/scopes.json"
        },
        {
          "key": "method",
          "list": "/docs/${scope}.json"
        }
      ],
      "type": "dynamic_path",
      "description": "The docs for all rest api methods"
    },
    "constructors": [
      {
        "name": "Octokit",
        "description": "Create a new Octokit client",
        "auth": "apiKey",
        "requiredKeys": [
          {
            "key": "GITHUB_TOKEN",
            "displayName": "GitHub Personal Access Token",
            "description": "The token for the GitHub user's account. You can create one at https://github.com/settings/tokens"
          }
        ],
        "functionalities": [
          "restApi"
        ],
        "internalKeys": []
      }
    ],
    "keysInfo": [
      {
        "key": "GITHUB_TOKEN",
        "constructors": [
          "Octokit"
        ],
        "description": "The token for the GitHub user's account. You can create one at https://github.com/settings/tokens",
        "required": true
      }
    ],
    "extraInfo": [
      "Use the `Octokit` constructor to create a new Octokit client."
    ]
  },
  {
    "name": "@microfox/google",
    "title": "Microfox Google SDK",
    "description": "Google SDK for Microfox",
    "path": "packages/google",
    "dependencies": [
      "@microfox/rest",
      "zod"
    ],
    "status": "stable",
    "authEndpoint": "/connect/google",
    "documentation": "https://www.npmjs.com/package/@microfox/google",
    "icon": "https://raw.githubusercontent.com/microfox-ai/microfox/refs/heads/main/logos/google.svg",
    "constructors": [
      {
        "name": "googleOAuthManager",
        "description": "Create a new Google client",
        "zodSecretSchema": "GoogleOAuthOptionsSchema",
        "auth": "oauth2",
        "requiredKeys": [],
        "internalKeys": [
          {
            "key": "GOOGLE_ACCESS_TOKEN",
            "displayName": "Access Token",
            "description": "The access token for the Google client"
          },
          {
            "key": "GOOGLE_REFRESH_TOKEN",
            "displayName": "Refresh Token",
            "description": "The refresh token for the Google client"
          },
          {
            "key": "GOOGLE_CLIENT_ID",
            "displayName": "Client ID",
            "description": "The client ID for the Google client"
          },
          {
            "key": "GOOGLE_CLIENT_SECRET",
            "displayName": "Client Secret",
            "description": "The client secret for the Google client"
          },
          {
            "key": "SCOPES",
            "displayName": "Scopes",
            "description": "The scopes for the Google client"
          }
        ]
      }
    ],
    "keysInfo": [
      {
        "key": "GOOGLE_ACCESS_TOKEN",
        "constructors": [
          "googleOAuthManager"
        ],
        "description": "The access token for the Google client",
        "required": true
      },
      {
        "key": "GOOGLE_REFRESH_TOKEN",
        "constructors": [
          "googleOAuthManager"
        ],
        "description": "The refresh token for the Google client",
        "required": true
      },
      {
        "key": "GOOGLE_CLIENT_ID",
        "constructors": [
          "googleOAuthManager"
        ],
        "description": "The client ID for the Google client",
        "required": true
      },
      {
        "key": "GOOGLE_CLIENT_SECRET",
        "constructors": [
          "googleOAuthManager"
        ],
        "description": "The client secret for the Google client",
        "required": true
      },
      {
        "key": "SCOPES",
        "constructors": [
          "googleOAuthManager"
        ],
        "description": "The scopes for the Google client",
        "required": true
      }
    ],
    "extraInfo": [
      "Use the `createGoogleClient` constructor to create a new Google client."
    ]
  },
  {
    "name": "@microfox/google-oauth",
    "title": "Microfox Google OAuth SDK",
    "description": "Google OAuth SDK for Microfox",
    "path": "packages/google-oauth",
    "dependencies": [
      "zod"
    ],
    "status": "stable",
    "authEndpoint": "/connect/google-oauth",
    "documentation": "https://www.npmjs.com/package/@microfox/google-oauth",
    "icon": "https://raw.githubusercontent.com/microfox-ai/microfox/refs/heads/main/packages/google-oauth/icon.svg",
    "constructors": [
      {
        "name": "GoogleOAuthSdk",
        "description": "Create a new Google OAuth client",
        "zodSecretSchema": "GoogleAuthConfigSchema",
        "auth": "oauth2",
        "requiredKeys": [],
        "internalKeys": [
          {
            "key": "GOOGLE_ACCESS_TOKEN",
            "displayName": "Access Token",
            "description": "The access token for the Google client"
          },
          {
            "key": "GOOGLE_REFRESH_TOKEN",
            "displayName": "Refresh Token",
            "description": "The refresh token for the Google client"
          },
          {
            "key": "GOOGLE_CLIENT_ID",
            "displayName": "Client ID",
            "description": "The client ID for the Google application"
          },
          {
            "key": "GOOGLE_CLIENT_SECRET",
            "displayName": "Client Secret",
            "description": "The client secret for the Google application"
          },
          {
            "key": "GOOGLE_SCOPES",
            "displayName": "Scopes",
            "description": "The scopes for the Google client"
          }
        ]
      }
    ],
    "keysInfo": [
      {
        "key": "GOOGLE_ACCESS_TOKEN",
        "constructors": [
          "GoogleOAuthSdk"
        ],
        "description": "The access token for the Google client",
        "required": true
      },
      {
        "key": "GOOGLE_REFRESH_TOKEN",
        "constructors": [
          "GoogleOAuthSdk"
        ],
        "description": "The refresh token for the Google client",
        "required": true
      },
      {
        "key": "GOOGLE_CLIENT_ID",
        "constructors": [
          "GoogleOAuthSdk"
        ],
        "description": "The client ID for the Google application",
        "required": true
      },
      {
        "key": "GOOGLE_CLIENT_SECRET",
        "constructors": [
          "GoogleOAuthSdk"
        ],
        "description": "The client secret for the Google application",
        "required": true
      },
      {
        "key": "GOOGLE_SCOPES",
        "constructors": [
          "GoogleOAuthSdk"
        ],
        "description": "The scopes for the Google client",
        "required": true
      }
    ],
    "extraInfo": [
      "Use the `GoogleOAuthSdk` class to create a new Google OAuth client."
    ]
  },
  {
    "name": "@microfox/google-sheets",
    "title": "Google Sheets SDK",
    "description": "A TypeScript SDK for interacting with Google Sheets.",
    "path": "packages/google-sheets",
    "dependencies": [
      "zod",
      "@microfox/google-oauth"
    ],
    "status": "stable",
    "authEndpoint": "/connect/google-oauth",
    "oauth2Scopes": [
      "https://www.googleapis.com/auth/spreadsheets"
    ],
    "documentation": "https://www.npmjs.com/package/@microfox/google-sheets",
    "icon": "https://raw.githubusercontent.com/microfox-ai/microfox/refs/heads/main/logos/google-sheets-icon.svg",
    "readme_map": {
      "path": "/README.md",
      "title": "createGoogleSheetsSdk Microfox",
      "functionalities": [
        "getValues",
        "updateValues",
        "appendValues",
        "clearValues",
        "batchGetValues",
        "batchUpdateValues",
        "batchClearValues",
        "validateAccessToken",
        "refreshAccessToken"
      ],
      "description": "The full README for the Google Sheets SDK"
    },
    "constructors": [
      {
        "name": "createGoogleSheetsSdk",
        "description": "Create a new Google Sheets SDK client through which you can interact with the API",
        "auth": "oauth2",
        "authSdk": "@microfox/google-oauth",
        "outputKeys": [],
        "requiredKeys": [],
        "internalKeys": [
          {
            "key": "GOOGLE_CLIENT_ID",
            "displayName": "Google Client ID",
            "description": "The client ID for Google OAuth authentication. You can obtain this from the Google Cloud Console."
          },
          {
            "key": "GOOGLE_CLIENT_SECRET",
            "displayName": "Google Client Secret",
            "description": "The client secret for Google OAuth authentication. You can obtain this from the Google Cloud Console."
          },
          {
            "key": "GOOGLE_ACCESS_TOKEN",
            "displayName": "Google Access Token",
            "description": "The access token for Google OAuth authentication. This is obtained after the OAuth flow and should be kept secure."
          },
          {
            "key": "GOOGLE_REFRESH_TOKEN",
            "displayName": "Google Refresh Token",
            "description": "The refresh token for Google OAuth authentication. This is used to obtain new access tokens when they expire."
          }
        ],
        "functionalities": [
          "getValues",
          "updateValues",
          "appendValues",
          "clearValues",
          "batchGetValues",
          "batchUpdateValues",
          "batchClearValues",
          "validateAccessToken",
          "refreshAccessToken"
        ]
      }
    ],
    "keysInfo": [
      {
        "key": "GOOGLE_CLIENT_ID",
        "constructors": [
          "createGoogleSheetsSdk"
        ],
        "description": "The client ID for Google OAuth authentication. You can obtain this from the Google Cloud Console.",
        "required": true
      },
      {
        "key": "GOOGLE_CLIENT_SECRET",
        "constructors": [
          "createGoogleSheetsSdk"
        ],
        "description": "The client secret for Google OAuth authentication. You can obtain this from the Google Cloud Console.",
        "required": true
      },
      {
        "key": "GOOGLE_ACCESS_TOKEN",
        "constructors": [
          "createGoogleSheetsSdk"
        ],
        "description": "The access token for Google OAuth authentication. This is obtained after the OAuth flow and should be kept secure.",
        "required": true
      },
      {
        "key": "GOOGLE_REFRESH_TOKEN",
        "constructors": [
          "createGoogleSheetsSdk"
        ],
        "description": "The refresh token for Google OAuth authentication. This is used to obtain new access tokens when they expire.",
        "required": true
      }
    ],
    "extraInfo": [
      "Use the `createGoogleSheetsSdk` constructor to create a new client."
    ]
  },
  {
    "name": "@microfox/gravatar",
    "title": "Microfox Gravatar",
    "description": "Microfox SDK for Gravatar profile and avatar services",
    "path": "packages/gravatar",
    "dependencies": [
      "@microfox/core"
    ],
    "status": "partial",
    "apiKeys": [
      "GRAVATAR_API_KEY"
    ],
    "extraInfo": []
  },
  {
    "name": "@microfox/hacker-news",
    "title": "Microfox Hacker News",
    "description": "Microfox SDK for Hacker News",
    "path": "packages/hacker-news",
    "dependencies": [
      "@microfox/core",
      "ky",
      "zod"
    ],
    "status": "partial",
    "apiKeys": [
      "HACKER_NEWS_API_KEY"
    ],
    "extraInfo": []
  },
  {
    "name": "@microfox/hunter",
    "title": "Microfox Hunter",
    "description": "Microfox SDK for Hunter.io email finder and verification",
    "path": "packages/hunter",
    "dependencies": [
      "@microfox/core"
    ],
    "status": "partial",
    "apiKeys": [
      "HUNTER_API_KEY"
    ],
    "extraInfo": []
  },
  {
    "name": "@microfox/jigsawstack",
    "title": "Microfox Jigsawstack",
    "description": "Microfox adapter for the Jigsawstack AI SDK",
    "path": "packages/jigsawstack",
    "dependencies": [
      "@microfox/core"
    ],
    "status": "partial",
    "apiKeys": [
      "JIGSAWSTACK_API_KEY"
    ],
    "extraInfo": []
  },
  {
    "name": "@microfox/jina",
    "title": "Microfox Jina",
    "description": "Microfox SDK for Jina AI",
    "path": "packages/jina",
    "dependencies": [
      "@microfox/core",
      "ky",
      "p-throttle",
      "zod"
    ],
    "status": "partial",
    "apiKeys": [
      "JINA_API_KEY"
    ],
    "extraInfo": []
  },
  {
    "name": "@microfox/langchain",
    "title": "Microfox LangChain",
    "description": "Microfox adapter for the LangChain AI SDK",
    "path": "packages/langchain",
    "dependencies": [
      "@microfox/core",
      "@langchain/core"
    ],
    "status": "partial",
    "apiKeys": [],
    "extraInfo": []
  },
  {
    "name": "@microfox/leadmagic",
    "title": "Microfox LeadMagic",
    "description": "Microfox SDK for LeadMagic lead generation and enrichment",
    "path": "packages/leadmagic",
    "dependencies": [
      "@microfox/core"
    ],
    "status": "partial",
    "apiKeys": [
      "LEADMAGIC_API_KEY"
    ],
    "extraInfo": []
  },
  {
    "name": "@microfox/linkedin-oauth",
    "title": "Microfox LinkedIn OAuth SDK",
    "description": "LinkedIn OAuth SDK for Microfox",
    "path": "packages/linkedin-oauth",
    "dependencies": [
      "@microfox/rest-sdk",
      "zod"
    ],
    "status": "stable",
    "authEndpoint": "/connect/linkedin-oauth",
    "documentation": "https://www.npmjs.com/package/@microfox/linkedin-oauth",
    "icon": "https://raw.githubusercontent.com/microfox-ai/microfox/refs/heads/main/packages/linkedin-oauth/icon.svg",
    "constructors": [
      {
        "name": "linkedinOAuthManager",
        "description": "Create a new LinkedIn OAuth client",
        "zodSecretSchema": "LinkedInOAuthOptionsSchema",
        "auth": "oauth2",
        "requiredKeys": [],
        "internalKeys": [
          {
            "key": "LINKEDIN_ACCESS_TOKEN",
            "displayName": "Access Token",
            "description": "The access token for the LinkedIn client"
          },
          {
            "key": "LINKEDIN_REFRESH_TOKEN",
            "displayName": "Refresh Token",
            "description": "The refresh token for the LinkedIn client"
          },
          {
            "key": "LINKEDIN_CLIENT_ID",
            "displayName": "Client ID",
            "description": "The client ID for the LinkedIn application"
          },
          {
            "key": "LINKEDIN_CLIENT_SECRET",
            "displayName": "Client Secret",
            "description": "The client secret for the LinkedIn application"
          },
          {
            "key": "LINKEDIN_SCOPES",
            "displayName": "Scopes",
            "description": "The scopes for the LinkedIn client"
          }
        ]
      }
    ],
    "keysInfo": [
      {
        "key": "LINKEDIN_ACCESS_TOKEN",
        "constructors": [
          "linkedinOAuthManager"
        ],
        "description": "The access token for the LinkedIn client",
        "required": true
      },
      {
        "key": "LINKEDIN_REFRESH_TOKEN",
        "constructors": [
          "linkedinOAuthManager"
        ],
        "description": "The refresh token for the LinkedIn client",
        "required": true
      },
      {
        "key": "LINKEDIN_CLIENT_ID",
        "constructors": [
          "linkedinOAuthManager"
        ],
        "description": "The client ID for the LinkedIn application",
        "required": true
      },
      {
        "key": "LINKEDIN_CLIENT_SECRET",
        "constructors": [
          "linkedinOAuthManager"
        ],
        "description": "The client secret for the LinkedIn application",
        "required": true
      },
      {
        "key": "LINKEDIN_SCOPES",
        "constructors": [
          "linkedinOAuthManager"
        ],
        "description": "The scopes for the LinkedIn client",
        "required": true
      }
    ],
    "extraInfo": [
      "Use the `createLinkedInClient` constructor to create a new LinkedIn OAuth client."
    ]
  },
  {
    "name": "@microfox/linkedin-share",
    "title": "Microfox LinkedIn Share SDK",
    "description": "LinkedIn Share SDK for Microfox",
    "path": "packages/linkedin-share",
    "dependencies": [
      "@microfox/rest-sdk",
      "zod"
    ],
    "status": "stable",
    "authEndpoint": "/connect/linkedin",
    "documentation": "https://www.npmjs.com/package/@microfox/linkedin-share",
    "icon": "https://raw.githubusercontent.com/microfox-ai/microfox/refs/heads/main/packages/linkedin-share/icon.svg",
    "constructors": [
      {
        "name": "linkedinShareManager",
        "description": "Create a new LinkedIn Share client",
        "zodSecretSchema": "LinkedInShareOptionsSchema",
        "auth": "oauth2",
        "requiredKeys": [],
        "internalKeys": [
          {
            "key": "LINKEDIN_ACCESS_TOKEN",
            "displayName": "Access Token",
            "description": "The access token for the LinkedIn client"
          }
        ]
      }
    ],
    "keysInfo": [
      {
        "key": "LINKEDIN_ACCESS_TOKEN",
        "constructors": [
          "linkedinShareManager"
        ],
        "description": "The access token for the LinkedIn client",
        "required": true
      }
    ],
    "extraInfo": [
      "Use the `createLinkedInShareClient` constructor to create a new LinkedIn Share client for posting content to LinkedIn."
    ]
  },
  {
    "name": "@microfox/llamaindex",
    "title": "Microfox LlamaIndex",
    "description": "Microfox adapter for the LlamaIndex AI SDK",
    "path": "packages/llamaindex",
    "dependencies": [
      "@microfox/core",
      "llamaindex"
    ],
    "status": "partial",
    "apiKeys": [],
    "extraInfo": []
  },
  {
    "name": "@microfox/mastra",
    "title": "Microfox Mastra",
    "description": "Microfox adapter for the Mastra AI Agent SDK",
    "path": "packages/mastra",
    "dependencies": [
      "@microfox/core"
    ],
    "status": "partial",
    "apiKeys": [
      "MASTRA_API_KEY"
    ],
    "extraInfo": []
  },
  {
    "name": "@microfox/midjourney",
    "title": "Microfox Midjourney",
    "description": "Microfox SDK for the unofficial Midjourney API via imagineapi.dev",
    "path": "packages/midjourney",
    "dependencies": [
      "@microfox/core"
    ],
    "status": "partial",
    "apiKeys": [
      "MIDJOURNEY_API_KEY"
    ],
    "extraInfo": []
  },
  {
    "name": "@microfox/novu",
    "title": "Microfox Novu",
    "description": "Microfox SDK for the Novu notifications API",
    "path": "packages/novu",
    "dependencies": [
      "@microfox/core"
    ],
    "status": "partial",
    "apiKeys": [
      "NOVU_API_KEY"
    ],
    "extraInfo": []
  },
  {
    "name": "@microfox/people-data-labs",
    "title": "Microfox People Data Labs",
    "description": "Microfox SDK for People Data Labs",
    "path": "packages/people-data-labs",
    "dependencies": [
      "@microfox/core",
      "ky",
      "p-throttle",
      "zod"
    ],
    "status": "partial",
    "apiKeys": [
      "PEOPLE_DATA_LABS_API_KEY"
    ],
    "extraInfo": []
  },
  {
    "name": "@microfox/perigon",
    "title": "Microfox Perigon",
    "description": "Microfox SDK for the Perigon News API",
    "path": "packages/perigon",
    "dependencies": [
      "@microfox/core",
      "ky",
      "p-throttle",
      "zod"
    ],
    "status": "partial",
    "apiKeys": [
      "PERIGON_API_KEY"
    ],
    "extraInfo": []
  },
  {
    "name": "@microfox/polygon",
    "title": "Microfox Polygon",
    "description": "Microfox SDK for the Polygon stock API",
    "path": "packages/polygon",
    "dependencies": [
      "@microfox/core",
      "ky",
      "zod"
    ],
    "status": "partial",
    "apiKeys": [
      "POLYGON_API_KEY"
    ],
    "extraInfo": []
  },
  {
    "name": "@microfox/predict-leads",
    "title": "Microfox Predict Leads",
    "description": "Microfox SDK for Predict Leads company intelligence and signals",
    "path": "packages/predict-leads",
    "dependencies": [
      "@microfox/core"
    ],
    "status": "partial",
    "apiKeys": [
      "PREDICT_LEADS_API_KEY"
    ],
    "extraInfo": []
  },
  {
    "name": "@microfox/proxycurl",
    "title": "Proxycurl Scraping API",
    "description": "Proxycurl API client",
    "path": "packages/proxycurl",
    "dependencies": [
      "@microfox/core"
    ],
    "status": "partial",
    "apiKeys": [
      "PROXYCURL_API_KEY"
    ],
    "extraInfo": []
  },
  {
    "name": "@microfox/rest-sdk",
    "title": "Microfox REST SDK",
    "description": "REST SDK for Microfox",
    "path": "packages/rest-sdk",
    "dependencies": [
      "zod"
    ],
    "status": "stable",
    "documentation": "https://www.npmjs.com/package/@microfox/rest-sdk",
    "icon": "https://raw.githubusercontent.com/microfox-ai/microfox/refs/heads/main/logos/rest-api.svg",
    "constructors": [],
    "keysInfo": [],
    "extraInfo": []
  },
  {
    "name": "@microfox/rocketreach",
    "title": "Microfox RocketReach",
    "description": "Microfox SDK for RocketReach contact enrichment and B2B intelligence",
    "path": "packages/rocketreach",
    "dependencies": [
      "@microfox/core"
    ],
    "status": "partial",
    "apiKeys": [
      "ROCKETREACH_API_KEY"
    ],
    "extraInfo": []
  },
  {
    "name": "@microfox/searxng",
    "title": "Microfox SearXNG",
    "description": "Microfox SDK for the SearXNG meta search engine",
    "path": "packages/searxng",
    "dependencies": [
      "@microfox/core",
      "ky",
      "zod"
    ],
    "status": "partial",
    "apiKeys": [],
    "extraInfo": []
  },
  {
    "name": "@microfox/serpapi",
    "title": "Microfox SerpAPI",
    "description": "Microfox SDK for SerpAPI Google Search",
    "path": "packages/serpapi",
    "dependencies": [
      "@microfox/core",
      "ky",
      "zod"
    ],
    "status": "partial",
    "apiKeys": [
      "SERPAPI_API_KEY"
    ],
    "extraInfo": []
  },
  {
    "name": "@microfox/serper",
    "title": "Microfox Serper",
    "description": "Microfox SDK for Serper Google Search",
    "path": "packages/serper",
    "dependencies": [
      "@microfox/core",
      "ky",
      "zod"
    ],
    "status": "partial",
    "apiKeys": [
      "SERPER_API_KEY"
    ],
    "extraInfo": []
  },
  {
    "name": "@microfox/slack-web-tiny",
    "title": "Microfox Slack Web Tiny",
    "description": "A lightweight, type-safe SDK for interacting with the Slack Web API",
    "path": "packages/slack-web-tiny",
    "dependencies": [
      "@microfox/rest-sdk",
      "zod"
    ],
    "status": "stable",
    "authEndpoint": "/connect/slack",
    "documentation": "https://www.npmjs.com/package/@microfox/slack-web-tiny",
    "icon": "https://raw.githubusercontent.com/microfox-ai/microfox/refs/heads/main/logos/slack-icon.svg",
    "readme_map": {
      "path": "/README.md",
      "title": "createSlackSDK Microfox",
      "functionalities": [
        "sendMessage",
        "updateMessage",
        "uploadFile"
      ],
      "description": "The full README for the Slack Web Tiny SDK"
    },
    "constructors": [
      {
        "name": "createSlackSDK",
        "description": "Create a new Slack SDK through which you can operate bots on Slack",
        "auth": "apiKey",
        "requiredKeys": [
          {
            "key": "SLACK_BOT_TOKEN",
            "displayName": "Slack Bot Token",
            "description": "The token for the Slack Web Tiny client"
          }
        ],
        "internalKeys": []
      }
    ],
    "keysInfo": [
      {
        "key": "SLACK_BOT_TOKEN",
        "constructors": [
          "createSlackSDK"
        ],
        "description": "The token for the createSlackSDK constructor",
        "required": true
      }
    ],
    "extraInfo": [
      "Use the `createSlackSDK` constructor to create a new Slack Web Tiny client.",
      "The SDK supports both header and query-based authentication methods."
    ]
  },
  {
    "name": "@microfox/social-data",
    "title": "Microfox Social Data",
    "description": "Microfox SDK for accessing Twitter via Social Data",
    "path": "packages/social-data",
    "dependencies": [
      "@microfox/core",
      "ky",
      "p-throttle",
      "zod"
    ],
    "status": "partial",
    "apiKeys": [
      "SOCIAL_DATA_API_KEY"
    ],
    "extraInfo": []
  },
  {
    "name": "@microfox/stdlib",
    "title": "Microfox Stdlib",
    "description": "Standard library of AI functions which work with any LLM and TypeScript AI SDK",
    "path": "packages/stdlib",
    "dependencies": [
      "@microfox/apollo",
      "@microfox/bing",
      "@microfox/calculator",
      "@microfox/clearbit",
      "@microfox/core",
      "@microfox/dexa",
      "@microfox/diffbot",
      "@microfox/e2b",
      "@microfox/exa",
      "@microfox/firecrawl",
      "@microfox/github",
      "@microfox/gravatar",
      "@microfox/hacker-news",
      "@microfox/hunter",
      "@microfox/jina",
      "@microfox/leadmagic",
      "@microfox/midjourney",
      "@microfox/novu",
      "@microfox/people-data-labs",
      "@microfox/perigon",
      "@microfox/polygon",
      "@microfox/predict-leads",
      "@microfox/proxycurl",
      "@microfox/rocketreach",
      "@microfox/searxng",
      "@microfox/serpapi",
      "@microfox/serper",
      "@microfox/slack",
      "@microfox/social-data",
      "@microfox/tavily",
      "@microfox/twilio",
      "@microfox/weather",
      "@microfox/wikidata",
      "@microfox/wikipedia",
      "@microfox/wolfram-alpha",
      "@microfox/zoominfo",
      "@e2b/code-interpreter",
      "zod"
    ],
    "status": "partial",
    "apiKeys": [],
    "extraInfo": []
  },
  {
    "name": "@microfox/tavily",
    "title": "Microfox Tavily",
    "description": "Microfox SDK for Tavily",
    "path": "packages/tavily",
    "dependencies": [
      "@microfox/core",
      "ky",
      "p-throttle",
      "zod"
    ],
    "status": "partial",
    "apiKeys": [
      "TAVILY_API_KEY"
    ],
    "extraInfo": []
  },
  {
    "name": "@microfox/twilio",
    "title": "Microfox Twilio",
    "description": "Microfox SDK for Twilio",
    "path": "packages/twilio",
    "dependencies": [
      "@microfox/core",
      "ky",
      "zod"
    ],
    "status": "partial",
    "apiKeys": [
      "TWILIO_API_KEY"
    ],
    "extraInfo": []
  },
  {
    "name": "@microfox/twitter",
    "title": "Microfox X SDK",
    "description": "A lightweight, type-safe SDK for interacting with the X (Twitter) API v2",
    "path": "packages/twitter",
    "dependencies": [
      "zod"
    ],
    "status": "stable",
    "authEndpoint": "/connect/x",
    "documentation": "https://www.npmjs.com/package/@microfox/twitter",
    "icon": "https://raw.githubusercontent.com/microfox-ai/microfox/refs/heads/main/logos/x.svg",
    "readme_map": {
      "path": "/README.md",
      "title": "createXSDK Microfox",
      "functionalities": [
        "tweets.create",
        "tweets.get",
        "tweets.getMultiple",
        "tweets.delete",
        "users.getByUsername",
        "users.getByUsernames",
        "users.getById",
        "users.getByIds",
        "users.getMe",
        "media.upload"
      ],
      "description": "The full README for the X SDK"
    },
    "constructors": [
      {
        "name": "createXSDK",
        "description": "Create a new X SDK client through which you can interact with X (Twitter) API",
        "auth": "apiKey",
        "requiredKeys": [
          {
            "key": "X_API_KEY",
            "displayName": "API Key",
            "description": "The API key for the X client"
          },
          {
            "key": "X_API_SECRET",
            "displayName": "API Secret",
            "description": "The API secret for the X client"
          },
          {
            "key": "X_ACCESS_TOKEN",
            "displayName": "Access Token",
            "description": "The access token for the X client"
          },
          {
            "key": "X_ACCESS_SECRET",
            "displayName": "Access Secret",
            "description": "The access secret for the X client"
          }
        ],
        "internalKeys": [],
        "functionalities": [
          "tweets.create",
          "tweets.get",
          "tweets.getMultiple",
          "tweets.delete",
          "users.getByUsername",
          "users.getByUsernames",
          "users.getById",
          "users.getByIds",
          "users.getMe",
          "media.upload"
        ]
      }
    ],
    "keysInfo": [
      {
        "key": "X_API_KEY",
        "constructors": [
          "createXSDK"
        ],
        "description": "The API key for the X client",
        "required": true
      },
      {
        "key": "X_API_SECRET",
        "constructors": [
          "createXSDK"
        ],
        "description": "The API secret for the X client",
        "required": true
      },
      {
        "key": "X_ACCESS_TOKEN",
        "constructors": [
          "createXSDK"
        ],
        "description": "The access token for the X client",
        "required": true
      },
      {
        "key": "X_ACCESS_SECRET",
        "constructors": [
          "createXSDK"
        ],
        "description": "The access secret for the X client",
        "required": true
      }
    ],
    "extraInfo": [
      "Use the `createXSDK` constructor to create a new X client.",
      "The SDK supports both v2 API endpoints for tweets and users.",
      "Media uploads are supported through the v1.1 API endpoint."
    ]
  },
  {
    "name": "@microfox/weather",
    "title": "Microfox Weather",
    "description": "Microfox SDK for weatherapi.com",
    "path": "packages/weather",
    "dependencies": [
      "@microfox/core",
      "ky",
      "zod"
    ],
    "status": "partial",
    "apiKeys": [
      "WEATHER_API_KEY"
    ],
    "extraInfo": []
  },
  {
    "name": "@microfox/wikidata",
    "title": "Microfox Wikidata",
    "description": "Microfox SDK for Wikidata",
    "path": "packages/wikidata",
    "dependencies": [
      "@microfox/core",
      "ky",
      "p-throttle",
      "wikibase-sdk",
      "zod"
    ],
    "status": "partial",
    "apiKeys": [],
    "extraInfo": []
  },
  {
    "name": "@microfox/wikipedia",
    "title": "Microfox Wikipedia",
    "description": "Microfox SDK for Wikipedia",
    "path": "packages/wikipedia",
    "dependencies": [
      "@microfox/core",
      "ky",
      "p-throttle",
      "zod"
    ],
    "status": "partial",
    "apiKeys": [],
    "extraInfo": []
  },
  {
    "name": "@microfox/wolfram-alpha",
    "title": "Microfox Wolfram Alpha",
    "description": "Microfox SDK for Wolfram Alpha",
    "path": "packages/wolfram-alpha",
    "dependencies": [
      "@microfox/core",
      "ky",
      "zod"
    ],
    "status": "partial",
    "apiKeys": [
      "WOLFRAM_ALPHA_API_KEY"
    ],
    "extraInfo": []
  },
  {
    "name": "@microfox/youtube",
    "title": "Microfox YouTube SDK",
    "description": "YouTube SDK for Microfox",
    "path": "packages/youtube",
    "dependencies": [
      "@microfox/google",
      "@microfox/rest-sdk",
      "zod"
    ],
    "status": "stable",
    "authEndpoint": "/connect/google",
    "documentation": "https://www.npmjs.com/package/@microfox/youtube",
    "icon": "https://raw.githubusercontent.com/microfox-ai/microfox/refs/heads/main/logos/youtube-icon.svg",
    "constructors": [
      {
        "name": "createYouTubeSDKWithTokens",
        "description": "Create a new YouTube client",
        "zodSecretSchema": "YouTubeSDKOptionsSchema",
        "auth": "oauth2",
        "requiredKeys": [],
        "internalKeys": [
          {
            "key": "GOOGLE_ACCESS_TOKEN",
            "displayName": "Access Token",
            "description": "The access token for the YouTube client"
          },
          {
            "key": "GOOGLE_REFRESH_TOKEN",
            "displayName": "Refresh Token",
            "description": "The refresh token for the YouTube client"
          },
          {
            "key": "GOOGLE_CLIENT_ID",
            "displayName": "Client ID",
            "description": "The client ID for the YouTube client"
          },
          {
            "key": "GOOGLE_CLIENT_SECRET",
            "displayName": "Client Secret",
            "description": "The client secret for the YouTube client"
          },
          {
            "key": "SCOPES",
            "displayName": "Scopes",
            "description": "The scopes for the YouTube client"
          }
        ]
      }
    ],
    "keysInfo": [
      {
        "key": "GOOGLE_ACCESS_TOKEN",
        "constructors": [
          "createYouTubeSDKWithTokens"
        ],
        "description": "The access token for the YouTube client",
        "required": true
      },
      {
        "key": "GOOGLE_REFRESH_TOKEN",
        "constructors": [
          "createYouTubeSDKWithTokens"
        ],
        "description": "The refresh token for the YouTube client",
        "required": true
      },
      {
        "key": "GOOGLE_CLIENT_ID",
        "constructors": [
          "createYouTubeSDKWithTokens"
        ],
        "description": "The client ID for the YouTube client",
        "required": true
      },
      {
        "key": "GOOGLE_CLIENT_SECRET",
        "constructors": [
          "createYouTubeSDKWithTokens"
        ],
        "description": "The client secret for the YouTube client",
        "required": true
      },
      {
        "key": "SCOPES",
        "constructors": [
          "createYouTubeSDKWithTokens"
        ],
        "description": "The scopes for the YouTube client",
        "required": true
      }
    ],
    "extraInfo": [
      "Use the `createYouTubeSDKWithTokens` constructor to create a new YouTube client."
    ]
  },
  {
    "name": "@microfox/zoominfo",
    "title": "Microfox ZoomInfo",
    "description": "Microfox SDK for ZoomInfo",
    "path": "packages/zoominfo",
    "dependencies": [
      "@microfox/core",
      "jsrsasign",
      "ky",
      "p-throttle",
      "zod"
    ],
    "status": "partial",
    "apiKeys": [],
    "extraInfo": []
  }
]