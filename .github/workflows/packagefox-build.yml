name: 'packagefox: build'

on:
  pull_request:
    types: [opened]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Run PackageFox build
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
          GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Extract package query and base URL from PR title
          PACKAGE_QUERY=$(echo "${{ github.event.pull_request.title }}" | grep -oP 'packagefox: build: \K[^ ]+')
          BASE_URL=$(echo "${{ github.event.pull_request.title }}" | grep -oP 'packagefox: build: [^ ]+ \K.+')

          if [ -z "$PACKAGE_QUERY" ] || [ -z "$BASE_URL" ]; then
            echo "Error: PR title must be in format 'packagefox: build: {PackageQuery} {BASE_URL}'"
            exit 1
          fi

          # Check for required environment variables
          if [ -z "$OPENAI_API_KEY" ] && [ -z "$ANTHROPIC_API_KEY" ] && [ -z "$GOOGLE_API_KEY" ]; then
            echo "Error: At least one of OPENAI_API_KEY, ANTHROPIC_API_KEY, or GOOGLE_API_KEY must be set"
            exit 1
          fi

          # Run the build script
          npm run build:package -- "$PACKAGE_QUERY" "$BASE_URL"

      - name: Check for changes
        id: git-check
        run: |
          git add .
          git diff --staged --quiet || echo "changes=true" >> $GITHUB_OUTPUT

      - name: Commit and push if changed
        if: steps.git-check.outputs.changes == 'true'
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git commit -m "chore: update package files [skip ci]"
          git push
