name: 'packagefox: build'

on:
  pull_request:
    types: [opened, synchronize]

permissions:
  contents: write
  pull-requests: write # Keep for potential future interactions, though not strictly needed for this flow

jobs:
  build:
    if: contains(github.event.pull_request.title, 'packagefox:') && contains(github.event.pull_request.title, 'build:')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Read packagefox config
        id: config
        run: |
          CONFIG_FILE=".microfox/packagefox-build.json"
          SHOULD_RUN="false"
          PACKAGE_QUERY=""
          BASE_URL=""

          if [ -f "$CONFIG_FILE" ]; then
            if jq -e '.requests | length > 0' "$CONFIG_FILE" > /dev/null; then
              PACKAGE_QUERY=$(jq -r '.requests[0].query' "$CONFIG_FILE")
              BASE_URL=$(jq -r '.requests[0].url' "$CONFIG_FILE")
              if [ -n "$PACKAGE_QUERY" ] && [ -n "$BASE_URL" ]; then
                SHOULD_RUN="true"
              else
                echo "Warning: Found config file but 'query' or 'url' missing/empty in the first request."
              fi
            else
              echo "Warning: Config file found but 'requests' array is empty or missing."
            fi
          else
            echo "Warning: Config file $CONFIG_FILE not found."
          fi

          echo "should_run=$SHOULD_RUN" >> $GITHUB_OUTPUT
          echo "package_query=$PACKAGE_QUERY" >> $GITHUB_OUTPUT
          echo "base_url=$BASE_URL" >> $GITHUB_OUTPUT

      - name: Run PackageFox build
        if: steps.config.outputs.should_run == 'true'
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
          GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Check for required environment variables
          if [ -z "$OPENAI_API_KEY" ] && [ -z "$ANTHROPIC_API_KEY" ] && [ -z "$GOOGLE_API_KEY" ]; then
            echo "Error: At least one of OPENAI_API_KEY, ANTHROPIC_API_KEY, or GOOGLE_API_KEY must be set"
            exit 1
          fi

          # Run the build script
          cd scripts
          npm run gen:pkg -- "${{ steps.config.outputs.package_query }}" "${{ steps.config.outputs.base_url }}" baseurl

      - name: Check for changes
        id: git-check
        if: steps.config.outputs.should_run == 'true'
        run: |
          git add .
          git diff --staged --quiet || echo "changes=true" >> $GITHUB_OUTPUT

      - name: Commit and push if changed
        if: steps.config.outputs.should_run == 'true' && steps.git-check.outputs.changes == 'true'
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git commit -m "packagefox: write: update package files [skip ci]"
          git push
