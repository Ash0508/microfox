name: Detect Changes and Create Changeset

on:
  pull_request:
    types: [closed]
    branches:
      - main

permissions:
  contents: write
  pull-requests: write

jobs:
  detect-changes:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - name: Debug Event
        run: |
          echo "Event name: ${{ github.event_name }}"
          echo "PR merged: ${{ github.event.pull_request.merged }}"
          echo "PR state: ${{ github.event.pull_request.state }}"
          echo "PR base ref: ${{ github.event.pull_request.base.ref }}"
          echo "PR head ref: ${{ github.event.pull_request.head.ref }}"

      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.ref }}

      - name: Setup Node.js 20.x
        uses: actions/setup-node@v2
        with:
          node-version: 20

      - name: Install Dependencies
        run: npm install

      - name: Get Changed Files
        id: changed-files
        uses: tj-actions/changed-files@v39
        with:
          # Compare the base commit on main before merge with the merge commit on main
          base_sha: ${{ github.event.pull_request.base.sha }}
          sha: ${{ github.sha }}
          files: |
            packages/*/**
            !packages/@ext_*/**
          files_ignore: |
            packages/*/node_modules/**
            packages/*/dist/**
            packages/*/build/**
            packages/*/.turbo/**
            packages/*/.next/**
            packages/*/coverage/**

      - name: Debug Changed Files
        run: |
          echo "Any changed: ${{ steps.changed-files.outputs.any_changed }}"
          echo "Changed files: ${{ steps.changed-files.outputs.all_changed_files }}"

      - name: Create Changeset
        if: steps.changed-files.outputs.any_changed == 'true'
        run: |
          # Compare the base commit on main before the merge with the merge commit
          BASE_SHA=${{ github.event.pull_request.base.sha }}
          MERGE_SHA=${{ github.sha }} # The SHA of the merge commit on main

          echo "Comparing base SHA ($BASE_SHA) with merge SHA ($MERGE_SHA)"

          # Get the number of changed lines, excluding @ext_ packages
          CHANGED_LINES=$(git diff --stat $BASE_SHA $MERGE_SHA -- 'packages/' ':!packages/@ext_*/**' | awk '{s+=$1} END {print s}')
          echo "Changed lines (excluding @ext_): $CHANGED_LINES"

          # Determine version bump based on changed lines
          if [ "$CHANGED_LINES" -gt 1000 ]; then
            VERSION_TYPE="major"
          elif [ "$CHANGED_LINES" -gt 100 ]; then
            VERSION_TYPE="minor"
          else
            VERSION_TYPE="patch"
          fi
          echo "Version type: $VERSION_TYPE"

          # Get affected packages, excluding @ext_ packages
          AFFECTED_PACKAGES=$(git diff --name-only $BASE_SHA $MERGE_SHA -- 'packages/' ':!packages/@ext_*/**' | sed -n 's;^packages/\([^/]*\)/.*;\1;p' | sort -u)
          echo "Affected packages: $AFFECTED_PACKAGES"

          if [ -z "$AFFECTED_PACKAGES" ]; then
            echo "No non-@ext_ packages affected. Exiting."
            exit 0
          fi

          # Get PR title for summary
          PR_TITLE=$(jq -r '.pull_request.title' "$GITHUB_EVENT_PATH")

          # Create changeset files manually
          CHANGESET_DIR=".changeset"
          mkdir -p "$CHANGESET_DIR"
          CHANGESET_ID=$(cat /proc/sys/kernel/random/uuid | sed 's/-//g' | head -c 10) # Generate a short random ID

          CHANGESET_FILE="$CHANGESET_DIR/generated-$CHANGESET_ID.md"
          echo "Creating changeset file: $CHANGESET_FILE"

          echo "---" > "$CHANGESET_FILE"
          for PACKAGE in $AFFECTED_PACKAGES; do
            echo "\"$PACKAGE\": $VERSION_TYPE" >> "$CHANGESET_FILE"
          done
          echo "---" >> "$CHANGESET_FILE"
          echo "" >> "$CHANGESET_FILE"
          echo "Summary from PR: $PR_TITLE" >> "$CHANGESET_FILE"

          echo "Changeset file content:"
          cat "$CHANGESET_FILE"

      - name: Generate Changelog Summary
        if: steps.changed-files.outputs.any_changed == 'true'
        env:
          PR_BODY: ${{ github.event.pull_request.body }}
        run: node .github/scripts/generate-changelog-summary.mjs

      - name: Commit Changes
        if: steps.changed-files.outputs.any_changed == 'true'
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add .changeset/
          git add CHANGELOG.md
          git commit -m "chore: add changesets and update changelog [skip ci]"
          git push
